/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vue;

import accesAuxDonnees.ConnexionFTPS;
import accesAuxDonnees.DAOUtilisateur;
import applivoicela.Appli;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.nio.file.Files;
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import metier.Apparait;
import metier.Casting;
import metier.Evenement;
import metier.Film;
import metier.Photo;
import metier.Realisation;
import metier.Vip;
import modele.ModelJTable;
import modele.ModelJTableApparait;
import modele.ModelJTableCasting;
import modele.ModelJTableEvenement;
import modele.ModelJTableFilm;
import modele.ModelJTablePhoto;
import modele.ModelJTableRealisation;
import org.apache.commons.net.ftp.FTPSClient;

/**
 *
 * @author lucas
 */
public class FenetrePrincipale extends javax.swing.JFrame {

    /**
     * Creates new form FenetrePrincipale2
     */
    private String name;
    private ModelJTable modelTableVip;
    private ModelJTableEvenement modelTableEvenement;
    private ModelJTableFilm modelTableFilm;
    private ModelJTablePhoto modelTablePhoto;
    private ModelJTableApparait modelTableApparait;
    private ModelJTableCasting modelTableCasting;
    private ModelJTableRealisation modelTableRealisation;
    private File f;
    private Desktop desktop;
    private String filename;
    private FTPSClient ftp;

    public FenetrePrincipale() {
    }

    public FenetrePrincipale(DAOUtilisateur monDaoUtilisateur, int id) {
        try {
            modelTableVip = new ModelJTable();
            modelTableEvenement = new ModelJTableEvenement();
            modelTableFilm = new ModelJTableFilm();
            modelTablePhoto = new ModelJTablePhoto();
            modelTableApparait = new ModelJTableApparait();
            modelTableCasting = new ModelJTableCasting();
            modelTableRealisation = new ModelJTableRealisation();

            modelTableVip.chargerVip();
            modelTableEvenement.chargerEvenement();
            modelTableFilm.chargerFilm();
            modelTablePhoto.chargerPhoto();
            modelTableApparait.chargerApparait();
            modelTableCasting.chargerCasting();
            modelTableRealisation.chargerRealisation();

            initComponents();

            DateTimeFormatter formatDate = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            String laDate = LocalDate.now().format(formatDate);
            name = monDaoUtilisateur.getName(id);
            lbBienvenue.setText("Bienvenue " + name + " !");
            lbDate.setText(laDate);
            btModifier.setEnabled(false);
            btSupprimer.setEnabled(false);
            btModifierEvenement.setEnabled(false);
            btSupprimerEvenement.setEnabled(false);
            btModifierFilm.setEnabled(false);
            btSupprimerFilm.setEnabled(false);
            btModifierPhoto.setEnabled(false);
            btSupprimerPhoto.setEnabled(false);
            btApercuPhoto.setEnabled(false);
            btSupprimerApp.setEnabled(false);
            btSupprimerCasting.setEnabled(false);
            btSupprimerReal.setEnabled(false);

        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbAppVIP = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablePhoto = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        btSupprimerPhoto = new javax.swing.JButton();
        btAjoutPhoto = new javax.swing.JButton();
        btModifierPhoto = new javax.swing.JButton();
        btApercuPhoto = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btAjouter = new javax.swing.JButton();
        btSupprimer = new javax.swing.JButton();
        btModifier = new javax.swing.JButton();
        btActualiser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableVip = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableEvenement = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        btAjouterEvenement = new javax.swing.JButton();
        btSupprimerEvenement = new javax.swing.JButton();
        btModifierEvenement = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableFilm = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        btAjouterFilm = new javax.swing.JButton();
        btSupprimerFilm = new javax.swing.JButton();
        btModifierFilm = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableApparait = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        btAjouterApp = new javax.swing.JButton();
        btSupprimerApp = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableCasting = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        btAjouterCasting = new javax.swing.JButton();
        btSupprimerCasting = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tableReal = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        btAjouterReal = new javax.swing.JButton();
        btSupprimerReal = new javax.swing.JButton();
        lbTitre = new javax.swing.JLabel();
        lbBienvenue = new javax.swing.JLabel();
        lbDate = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btDeconnecter = new javax.swing.JMenuItem();
        btQuitter = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(89, 89, 89));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tablePhoto.setModel(modelTablePhoto);
        tablePhoto.setRowHeight(45);
        tablePhoto.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablePhoto.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent evt) {
                tablePhotoValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(tablePhoto);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Gestion VIP"));
        jPanel9.setPreferredSize(new java.awt.Dimension(697, 77));

        btSupprimerPhoto.setText("Supprimer");
        btSupprimerPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSupprimerPhotoActionPerformed(evt);
            }
        });

        btAjoutPhoto.setText("Ajouter");
        btAjoutPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAjoutPhotoActionPerformed(evt);
            }
        });

        btModifierPhoto.setText("Modifier");
        btModifierPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModifierPhotoActionPerformed(evt);
            }
        });

        btApercuPhoto.setText("Apercu");
        btApercuPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btApercuPhotoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(btAjoutPhoto)
                .addGap(138, 138, 138)
                .addComponent(btModifierPhoto)
                .addGap(161, 161, 161)
                .addComponent(btSupprimerPhoto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(btApercuPhoto)
                .addGap(97, 97, 97))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btModifierPhoto)
                    .addComponent(btAjoutPhoto)
                    .addComponent(btSupprimerPhoto)
                    .addComponent(btApercuPhoto))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbAppVIP.addTab("GESTION PHOTO", jPanel2);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Gestion VIP"));
        jPanel5.setPreferredSize(new java.awt.Dimension(697, 77));

        btAjouter.setText("Ajouter");
        btAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAjouterActionPerformed(evt);
            }
        });

        btSupprimer.setText("Supprimer");
        btSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSupprimerActionPerformed(evt);
            }
        });

        btModifier.setText("Modifier");
        btModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModifierActionPerformed(evt);
            }
        });

        btActualiser.setText("Actualiser");
        btActualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActualiserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(btAjouter)
                .addGap(178, 178, 178)
                .addComponent(btModifier)
                .addGap(177, 177, 177)
                .addComponent(btSupprimer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btActualiser)
                .addGap(73, 73, 73))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAjouter)
                    .addComponent(btSupprimer)
                    .addComponent(btModifier)
                    .addComponent(btActualiser))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        tableVip.setModel(modelTableVip);
        tableVip.setRowHeight(45);
        tableVip.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableVip.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent evt) {
                tableVipValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tableVip);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbAppVIP.addTab("GESTION VIP", jPanel3);

        tableEvenement.setModel(modelTableEvenement);
        tableEvenement.setRowHeight(45);
        tableEvenement.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableEvenement.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent evt) {
                tableEvenementValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(tableEvenement);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Gestion Evenement"));

        btAjouterEvenement.setText("Ajouter");
        btAjouterEvenement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAjouterEvenementActionPerformed(evt);
            }
        });

        btSupprimerEvenement.setText("Supprimer");
        btSupprimerEvenement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSupprimerEvenementActionPerformed(evt);
            }
        });

        btModifierEvenement.setText("Modifier");
        btModifierEvenement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModifierEvenementActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(btAjouterEvenement)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 277, Short.MAX_VALUE)
                .addComponent(btModifierEvenement)
                .addGap(182, 182, 182)
                .addComponent(btSupprimerEvenement)
                .addGap(186, 186, 186))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAjouterEvenement)
                    .addComponent(btSupprimerEvenement)
                    .addComponent(btModifierEvenement))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.getAccessibleContext().setAccessibleName("");

        tbAppVIP.addTab("GESTION EVENEMENT", jPanel6);

        tableFilm.setModel(modelTableFilm);
        tableFilm.setRowHeight(45);
        tableFilm.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableFilm.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent evt) {
                tableFilmValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(tableFilm);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Gestion Film"));

        btAjouterFilm.setText("Ajouter");
        btAjouterFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAjouterFilmActionPerformed(evt);
            }
        });

        btSupprimerFilm.setText("Supprimer");
        btSupprimerFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSupprimerFilmActionPerformed(evt);
            }
        });

        btModifierFilm.setText("Modifier");
        btModifierFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModifierFilmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(btAjouterFilm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 277, Short.MAX_VALUE)
                .addComponent(btModifierFilm)
                .addGap(182, 182, 182)
                .addComponent(btSupprimerFilm)
                .addGap(186, 186, 186))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAjouterFilm)
                    .addComponent(btSupprimerFilm)
                    .addComponent(btModifierFilm))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbAppVIP.addTab("GESTION FILM", jPanel4);

        tableApparait.setModel(modelTableApparait);
        tableApparait.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tableApparait.setRowHeight(45);
        tableApparait.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableApparait.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableApparait.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent evt) {
                tableApparaitValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(tableApparait);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Gestion Apparition Photos VIP"));

        btAjouterApp.setText("Ajouter");
        btAjouterApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAjouterAppActionPerformed(evt);
            }
        });

        btSupprimerApp.setText("Supprimer");
        btSupprimerApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSupprimerAppActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btAjouterApp)
                .addGap(216, 216, 216)
                .addComponent(btSupprimerApp)
                .addGap(311, 311, 311))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAjouterApp)
                    .addComponent(btSupprimerApp))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbAppVIP.addTab("APPARITION PHOTOS VIP", jPanel1);

        tableCasting.setModel(modelTableCasting);
        tableCasting.setRowHeight(45);
        tableCasting.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableCasting.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent evt) {
                tableCastingValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(tableCasting);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Gestion Casting Film"));

        btAjouterCasting.setText("Ajouter");
        btAjouterCasting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAjouterCastingActionPerformed(evt);
            }
        });

        btSupprimerCasting.setText("Supprimer");
        btSupprimerCasting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSupprimerCastingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addComponent(btAjouterCasting)
                .addGap(216, 216, 216)
                .addComponent(btSupprimerCasting)
                .addGap(311, 311, 311))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAjouterCasting)
                    .addComponent(btSupprimerCasting))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbAppVIP.addTab("CASTING FILM", jPanel11);

        tableReal.setModel(modelTableRealisation);
        tableReal.setRowHeight(45);
        tableReal.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableReal.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent evt) {
                tableRealValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(tableReal);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Gestion Réalisation Film"));

        btAjouterReal.setText("Ajouter");
        btAjouterReal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAjouterRealActionPerformed(evt);
            }
        });

        btSupprimerReal.setText("Supprimer");
        btSupprimerReal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSupprimerRealActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addComponent(btAjouterReal)
                .addGap(216, 216, 216)
                .addComponent(btSupprimerReal)
                .addGap(311, 311, 311))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAjouterReal)
                    .addComponent(btSupprimerReal))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbAppVIP.addTab("REALISATION FILM", jPanel13);

        lbTitre.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        lbTitre.setText("VOICELA");

        lbBienvenue.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        lbBienvenue.setText("Bienvenue XXXX");

        lbDate.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        lbDate.setText("26/04/17");

        jMenu1.setText("Menu");

        btDeconnecter.setText("Se déconnecter");
        btDeconnecter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeconnecterActionPerformed(evt);
            }
        });
        jMenu1.add(btDeconnecter);

        btQuitter.setText("Quitter");
        btQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btQuitterActionPerformed(evt);
            }
        });
        jMenu1.add(btQuitter);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbDate)
                .addGap(112, 112, 112))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(lbBienvenue))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(tbAppVIP, javax.swing.GroupLayout.PREFERRED_SIZE, 947, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(499, 499, 499)
                        .addComponent(lbTitre)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lbBienvenue)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbTitre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(tbAppVIP, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        close();
    }//GEN-LAST:event_formWindowClosing

    private void btDeconnecterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeconnecterActionPerformed
        int reponse = JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de vouloir vous déconnecter ?", "Déconnexion", JOptionPane.YES_NO_OPTION);
        if (reponse == JOptionPane.YES_OPTION) {
            this.dispose();
            new FenetreLogin().setVisible(true);
        }
    }//GEN-LAST:event_btDeconnecterActionPerformed

    private void btQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btQuitterActionPerformed
        close();
    }//GEN-LAST:event_btQuitterActionPerformed

    private void btModifierFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModifierFilmActionPerformed
        try {
            int row = tableFilm.getSelectedRow();
            Film leFilm = modelTableFilm.selectionnerFilm(row);
            int oldNumVisa = leFilm.getNumVisa();
            FenetreModificationFilm fn = new FenetreModificationFilm(this, leFilm);
            fn.setVisible(true);

            if (fn.doModal()) {
                modelTableFilm.modifierFilm(leFilm, oldNumVisa);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur modification film", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btModifierFilmActionPerformed

    private void btSupprimerFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSupprimerFilmActionPerformed
        try {

            if (tableFilm.getSelectedRow() > -1) {
                int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce film ?", "Suppression évènement", JOptionPane.YES_NO_OPTION);
                if (reponse == JOptionPane.YES_OPTION) {
                    int row = tableFilm.getSelectedRow();
                    int numVisa = (int) tableFilm.getValueAt(row, 0);
                    modelTableFilm.supprimerFilm(numVisa, row);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionner un film !", "Attention !", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur suppression film", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btSupprimerFilmActionPerformed

    private void btAjouterFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAjouterFilmActionPerformed
        try {
            Film leFilm = new Film();
            FenetreAjoutFilm fn = new FenetreAjoutFilm(this, leFilm);
            fn.setVisible(true);

            if (fn.doModal()) {
                modelTableFilm.ajouterFilm(leFilm);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur ajout film", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btAjouterFilmActionPerformed

    private void btModifierEvenementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModifierEvenementActionPerformed
        try {
            Evenement unEvenement = modelTableEvenement.selectionnerEvenement(tableEvenement.getSelectedRow());
            LocalDate oldDateMariage = unEvenement.getDateMariage();
            FenetreModificationEvenement fn = new FenetreModificationEvenement(this, unEvenement);
            fn.setVisible(true);

            if (fn.doModal()) {
                modelTableEvenement.modifierEvenement(unEvenement, oldDateMariage);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur modification évènement", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btModifierEvenementActionPerformed

    private void btSupprimerEvenementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSupprimerEvenementActionPerformed
        try {

            if (tableEvenement.getSelectedRow() > -1) {
                int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer cet évènement ?", "Suppression évènement", JOptionPane.YES_NO_OPTION);
                if (reponse == JOptionPane.YES_OPTION) {
                    int row = tableEvenement.getSelectedRow();
                    int numEvenement = (int) tableEvenement.getValueAt(row, 0);
                    LocalDate date = (LocalDate) tableEvenement.getValueAt(row, 4);
                    modelTableEvenement.supprimerEvenement(numEvenement, row, date);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionner un évènement !", "Attention !", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur suppression évènement", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btSupprimerEvenementActionPerformed

    private void btAjouterEvenementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAjouterEvenementActionPerformed
        try {
            Evenement unEvenement = new Evenement();
            FenetreAjoutEvenement fn = new FenetreAjoutEvenement(this, unEvenement, modelTableVip);
            fn.setVisible(true);
            if (fn.doModal()) {
                modelTableEvenement.ajouterEvenement(unEvenement);

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur ajout évènement", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btAjouterEvenementActionPerformed

    private void btActualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActualiserActionPerformed
        try {
            modelTableVip.chargerVip();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur chargement Vip", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btActualiserActionPerformed

    private void btModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModifierActionPerformed
        try {
            Vip leVip = modelTableVip.selectionVip(tableVip.getSelectedRow());
            int oldNum = leVip.getNumVip();
            FenetreModificationVip fn = new FenetreModificationVip(this, leVip);
            fn.setVisible(true);
            if (fn.doModal()) {
                modelTableVip.modifierVip(leVip, oldNum);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Modification Vip", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btModifierActionPerformed

    private void btSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSupprimerActionPerformed
        try {

            if (tableVip.getSelectedRow() > -1) {
                int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce VIP ?", "Suppression VIP", JOptionPane.YES_NO_OPTION);
                if (reponse == JOptionPane.YES_OPTION) {
                    int row = tableVip.getSelectedRow();
                    int id = (int) tableVip.getValueAt(row, 0);
                    modelTableVip.supprimerVip(id, row);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionner un VIP !", "Attention !", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Suppression VIP", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btSupprimerActionPerformed

    private void btAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAjouterActionPerformed
        try {
            Vip leVip = new Vip();
            FenetreAjoutVip fn = new FenetreAjoutVip(this, leVip);
            fn.setVisible(true);
            if (fn.doModal()) {
                modelTableVip.ajouterVip(leVip);

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Ajout VIP", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btAjouterActionPerformed

    private void btSupprimerPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSupprimerPhotoActionPerformed
        try {
            if (tablePhoto.getSelectedRow() > -1) {
                int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer cette photo ?", "Suppression Photo", JOptionPane.YES_NO_OPTION);
                if (reponse == JOptionPane.YES_OPTION) {
                    int row = tablePhoto.getSelectedRow();
                    String idPhoto = (String) tablePhoto.getValueAt(row, 0);
                    modelTablePhoto.supprimerPhoto(idPhoto, row);
                    ftp = ConnexionFTPS.CreerConnexion();
                    File src = new File(Appli.getPathFile(), idPhoto);
//                    src.delete();
                    System.out.println(src.getPath());
                    boolean ok = ftp.deleteFile(src.getPath());
                    if(ok==true){
                        System.out.println("supprimée !");
                    }else{
                        System.out.println("photo non supprimée !");
                    }
                    ftp.disconnect();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionner une photo !", "Attention !", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Suppression Photo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btSupprimerPhotoActionPerformed

    private void btAjoutPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAjoutPhotoActionPerformed
        try {
            Photo laPhoto = new Photo();
            FenetreAjoutPhoto fn = new FenetreAjoutPhoto(this, laPhoto);
            fn.setVisible(true);

            if (fn.doModal()) {
                modelTablePhoto.ajouterFilm(laPhoto);
                ftp = ConnexionFTPS.CreerConnexion();
                File file = fn.getFile();
//                File dest = new File(Appli.getPathFile(), laPhoto.getIdPhoto());
                File src = new File(file.getPath());
                InputStream input = new FileInputStream(src.getPath());
                ftp.storeFile(Appli.getPathFile()+laPhoto.getIdPhoto(), input);
                ftp.disconnect();
//                Files.copy(src.toPath(), dest.toPath(), REPLACE_EXISTING);
                JOptionPane.showMessageDialog(this, "Photo envoyée avec succès !", "Ajout Photo", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Ajout Photo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btAjoutPhotoActionPerformed

    private void btApercuPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btApercuPhotoActionPerformed
        if (tablePhoto.getSelectedRow() > -1) {
            String nomPhoto = (String) modelTablePhoto.getValueAt(tablePhoto.getSelectedRow(), 0);
            FenetreApercuPhoto fn = new FenetreApercuPhoto(this, nomPhoto);
            fn.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une photo !", "Attention !", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btApercuPhotoActionPerformed

    private void btModifierPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModifierPhotoActionPerformed
        try {
            Photo laPhoto = modelTablePhoto.selectionnerPhoto(tablePhoto.getSelectedRow());
            String oldIdPhoto = laPhoto.getIdPhoto();
            FenetreModificationPhoto fn = new FenetreModificationPhoto(this, laPhoto);
            fn.setVisible(true);
            if (fn.doModal()) {
                modelTablePhoto.modifierPhoto(laPhoto, oldIdPhoto);
                File src = new File(Appli.getPathFile(), oldIdPhoto);
                File dest = new File(Appli.getPathFile(), laPhoto.getIdPhoto());
                Files.copy(src.toPath(), dest.toPath(), REPLACE_EXISTING);
                if (src.toPath().compareTo(dest.toPath()) != 0) {
                    src.delete();
                }

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Modification Photo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btModifierPhotoActionPerformed

    private void btAjouterAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAjouterAppActionPerformed
        try {
            Apparait apparait = new Apparait();
            FenetreAjoutApparait fn = new FenetreAjoutApparait(this, apparait, modelTableVip);
            fn.setVisible(true);
            if (fn.doModal()) {
                modelTableApparait.ajouterApparait(apparait);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Ajout Apparition VIP Photo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btAjouterAppActionPerformed

    private void btSupprimerAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSupprimerAppActionPerformed
        try {
            if (tableApparait.getSelectedRow() > -1) {
                int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer cette apparition ?", "Suppression Apparition VIP", JOptionPane.YES_NO_OPTION);
                if (reponse == JOptionPane.YES_OPTION) {
                    int row = tableApparait.getSelectedRow();
                    int numVip = (int) tableApparait.getValueAt(row, 0);
                    String idPhoto = (String) tableApparait.getValueAt(row, 2);
                    modelTableApparait.supprimerApparait(numVip, idPhoto);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionner une apparition!", "Attention !", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Suppression Apparition VIP", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btSupprimerAppActionPerformed

    private void btAjouterCastingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAjouterCastingActionPerformed
        try {
            Casting leCasting = new Casting();
            FenetreAjoutCasting fn = new FenetreAjoutCasting(this, leCasting, modelTableVip, modelTableFilm);
            fn.setVisible(true);
            if (fn.doModal()) {
                modelTableCasting.ajouterCasting(leCasting);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Ajout Casting", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btAjouterCastingActionPerformed

    private void btSupprimerCastingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSupprimerCastingActionPerformed
        try {
            if (tableCasting.getSelectedRow() > -1) {
                int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce casting ?", "Suppression Casting", JOptionPane.YES_NO_OPTION);
                if (reponse == JOptionPane.YES_OPTION) {
                    int row = tableCasting.getSelectedRow();
                    int numVisa = (int) tableCasting.getValueAt(row, 0);
                    int numVip = (int) tableCasting.getValueAt(row, 2);
                    modelTableCasting.supprimerCasting(numVisa, numVip);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionner un casting", "Attention !", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Suppression Casting", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btSupprimerCastingActionPerformed

    private void btAjouterRealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAjouterRealActionPerformed
        try {
            Realisation laRealisation = new Realisation();
            FenetreAjoutRealisation fn = new FenetreAjoutRealisation(this, laRealisation, modelTableVip, modelTableFilm);
            fn.setVisible(true);
            if (fn.doModal()) {
                modelTableRealisation.ajouterRealisation(laRealisation);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Ajout Realisation", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btAjouterRealActionPerformed

    private void btSupprimerRealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSupprimerRealActionPerformed
        try {
            if (tableReal.getSelectedRow() > -1) {
                int reponse = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer cette realisation ?", "Suppression Casting", JOptionPane.YES_NO_OPTION);
                if (reponse == JOptionPane.YES_OPTION) {
                    int row = tableReal.getSelectedRow();
                    int numVisa = (int) tableReal.getValueAt(row, 0);
                    int numVip = (int) tableReal.getValueAt(row, 2);
                    modelTableRealisation.supprimerRealisation(numVisa, numVip);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Veuillez sélectionner une realisation", "Attention !", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur Suppression Realisation", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btSupprimerRealActionPerformed

    /**
     * @param args the command line arguments
     */
    private void tableVipValueChanged(ListSelectionEvent evt) {
        if (tableVip.getSelectedRow() > -1) {
            btModifier.setEnabled(true);
            btSupprimer.setEnabled(true);
        } else {
            btModifier.setEnabled(false);
            btSupprimer.setEnabled(false);
        }
    }

    private void tableEvenementValueChanged(ListSelectionEvent evt) {
        if (tableEvenement.getSelectedRow() > -1) {
            btModifierEvenement.setEnabled(true);
            btSupprimerEvenement.setEnabled(true);
        } else {
            btModifierEvenement.setEnabled(false);
            btSupprimerEvenement.setEnabled(false);
        }
    }

    private void tableFilmValueChanged(ListSelectionEvent evt) {
        if (tableFilm.getSelectedRow() > -1) {
            btModifierFilm.setEnabled(true);
            btSupprimerFilm.setEnabled(true);
        } else {
            btModifierFilm.setEnabled(false);
            btSupprimerFilm.setEnabled(false);
        }
    }

    private void tablePhotoValueChanged(ListSelectionEvent evt) {
        if (tablePhoto.getSelectedRow() > -1) {
            btModifierPhoto.setEnabled(true);
            btSupprimerPhoto.setEnabled(true);
            btApercuPhoto.setEnabled(true);
        } else {
            btModifierPhoto.setEnabled(false);
            btSupprimerPhoto.setEnabled(false);
            btApercuPhoto.setEnabled(false);
        }
    }

    private void tableApparaitValueChanged(ListSelectionEvent evt) {
        if (tableApparait.getSelectedRow() > -1) {
            btSupprimerApp.setEnabled(true);
        } else {
            btSupprimerApp.setEnabled(false);
        }
    }

    private void tableCastingValueChanged(ListSelectionEvent evt) {
        if (tableCasting.getSelectedRow() > -1) {
            btSupprimerCasting.setEnabled(true);
        } else {
            btSupprimerCasting.setEnabled(false);
        }
    }

    private void tableRealValueChanged(ListSelectionEvent evt) {
        if (tableReal.getSelectedRow() > -1) {
            btSupprimerReal.setEnabled(true);
        } else {
            btSupprimerReal.setEnabled(false);
        }
    }

    private void close() {
        int reponse = JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de vouloir quitter ?", "Quitter", JOptionPane.YES_NO_OPTION);
        if (reponse == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btActualiser;
    private javax.swing.JButton btAjoutPhoto;
    private javax.swing.JButton btAjouter;
    private javax.swing.JButton btAjouterApp;
    private javax.swing.JButton btAjouterCasting;
    private javax.swing.JButton btAjouterEvenement;
    private javax.swing.JButton btAjouterFilm;
    private javax.swing.JButton btAjouterReal;
    private javax.swing.JButton btApercuPhoto;
    private javax.swing.JMenuItem btDeconnecter;
    private javax.swing.JButton btModifier;
    private javax.swing.JButton btModifierEvenement;
    private javax.swing.JButton btModifierFilm;
    private javax.swing.JButton btModifierPhoto;
    private javax.swing.JMenuItem btQuitter;
    private javax.swing.JButton btSupprimer;
    private javax.swing.JButton btSupprimerApp;
    private javax.swing.JButton btSupprimerCasting;
    private javax.swing.JButton btSupprimerEvenement;
    private javax.swing.JButton btSupprimerFilm;
    private javax.swing.JButton btSupprimerPhoto;
    private javax.swing.JButton btSupprimerReal;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lbBienvenue;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbTitre;
    private javax.swing.JTable tableApparait;
    private javax.swing.JTable tableCasting;
    private javax.swing.JTable tableEvenement;
    private javax.swing.JTable tableFilm;
    private javax.swing.JTable tablePhoto;
    private javax.swing.JTable tableReal;
    private javax.swing.JTable tableVip;
    private javax.swing.JTabbedPane tbAppVIP;
    // End of variables declaration//GEN-END:variables
}
